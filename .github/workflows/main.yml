# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ dev ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch: yes
# -- WHAT TO DO 
# A workflow run is made up of one or more jobs that can run sequentially or in parallel 
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env: 
      TAG_NAME: "dev-timestamp"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: check branch
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: echo "check release"
        env:
          TAG_NAME: "rc-v1.0.1"
      # NAME OF CONTAINER docker build -t [name of container]:[tag of container] .
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo $TAG_NAME
        #run: |
         #     docker build -t [name of container]:[tag of container] .
          #    echo Application name: ${{ env.app }}
        
        #uses: yosherovych/Docker_CI
        #   tag_ref: ${{ github.ref }}
         #  image_name: Dockerfile

              

# deploy: 
    #  runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
  #  steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
 #     - uses: actions/checkout@v2

      # Runs a single command using the runners shell
 #     - name: Deploy docker image
 #     run: |
 #          echo deploy docker
 # test ci
